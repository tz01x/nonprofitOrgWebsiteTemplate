# Generated by Django 3.2.6 on 2022-08-05 00:42

import colorfield.fields
import core.models
from django.db import migrations, models
import django.db.models.deletion
import hitcount.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Affiliates name')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Picture (1:1 ratio is recommended) ')),
                ('created', models.DateField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, help_text="Don't need to fill this, because this field will be automatically generate", max_length=255, null=True, unique=True)),
                ('content', models.TextField(help_text='max charecter length is 400', max_length=400)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Picture  ( 1:1 ratio is recommended)')),
                ('created', models.DateField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Latest News',
                'verbose_name_plural': 'Latest News',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('article_type', models.CharField(choices=[['a', 'article'], ['p', 'publication']], max_length=1)),
            ],
            options={
                'verbose_name': 'Article and Publication Category',
            },
        ),
        migrations.CreateModel(
            name='ClubEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text="Don't need to fill this, because this field will be automatically generate", max_length=225, null=True, unique=True)),
                ('date', models.DateField()),
                ('title', models.CharField(max_length=200)),
                ('shortDescription', models.CharField(help_text='sort description about the event', max_length=250)),
                ('content', models.TextField(verbose_name='Event description')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Event banner (2.35:1 ratio is recommended)')),
                ('created', models.DateField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClubInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Club  full name')),
                ('sort_name', models.CharField(max_length=100, verbose_name='Club  sort name')),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=200)),
                ('google_map_link', models.URLField(blank=True, default=None, null=True)),
                ('meta_title', models.CharField(help_text='Keep your title length around 60 characters', max_length=150)),
                ('meta_description', models.CharField(help_text='Keep it around 160 characters. ', max_length=250)),
                ('description', models.TextField(verbose_name='club description')),
                ('sort_description_for_footer', models.TextField(verbose_name='sort description for footer')),
                ('registation_form_open', models.BooleanField(default=True)),
                ('current_member', models.IntegerField(default=0, verbose_name=' Current Members ')),
                ('alumni', models.IntegerField(default=0, verbose_name=' Alumni ')),
                ('advisors', models.IntegerField(default=0, verbose_name=' Advisors ')),
                ('faebook_url', models.URLField(blank=True, null=True, verbose_name='facebook url')),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('linkend_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Logo main (1:1  ratio is recommended)')),
                ('logo_2', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Logo 2 (1:1  ratio is recommended)')),
                ('logo_3', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Logo 3 (1:1  ratio is recommended)')),
                ('landing_picture', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='landing  picture 1 (210:71 ratio is recommended) ')),
                ('landing_picture_two', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='landing  picture 2 (210:71 ratio is recommended) ')),
                ('landing_picture_three', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='landing  picture 3 (210:71 ratio is recommended) ')),
                ('landing_picture_four', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='landing  picture 4 (210:71 ratio is recommended) ')),
                ('landing_picture_five', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='landing  picture 5 (210:71 ratio is recommended) ')),
                ('font_links', models.CharField(default='<link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@500&display=swap" rel="stylesheet">', max_length=500)),
                ('font_family', models.CharField(default="'Open Sans', sans-serif", help_text="Example: 'Open Sans', sans-serif", max_length=100)),
                ('primary_color', colorfield.fields.ColorField(default='#ED1C24', max_length=18)),
                ('text_p_color', colorfield.fields.ColorField(default='#FFFFFFFF', max_length=18, verbose_name='text color inside primary color  ')),
                ('primary_lite_color', colorfield.fields.ColorField(default='#ef3f3f', max_length=18)),
                ('primary_dark_color', colorfield.fields.ColorField(default='#a50c12', max_length=18)),
                ('secondary_color', colorfield.fields.ColorField(default='#1C75BC', max_length=18)),
                ('secondary_lite_color', colorfield.fields.ColorField(default='#1C75BC', max_length=18)),
                ('secondary_dark_color', colorfield.fields.ColorField(default='#1C75BC', max_length=18)),
                ('text_s_color', colorfield.fields.ColorField(default='#FFFFFFFF', max_length=18, verbose_name='text color inside secondary colors ')),
                ('gray_color', colorfield.fields.ColorField(default='#3E3E3E', max_length=18)),
                ('footer_bg_color', colorfield.fields.ColorField(default='#FF0000', max_length=18)),
                ('footer_text_color', colorfield.fields.ColorField(default='#3E3E3E', max_length=18)),
                ('footer_text_hover_color', colorfield.fields.ColorField(default='#3E3E3E', max_length=18)),
            ],
            options={
                'verbose_name': '**SITE CONFIG**',
            },
        ),
        migrations.CreateModel(
            name='GetinTouch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=500, verbose_name='Fullname')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('discription', models.TextField(max_length=5000, verbose_name='Short Description')),
                ('created', models.DateField(auto_now_add=True, db_index=True)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='LastNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='News Title')),
                ('slug', models.SlugField(blank=True, help_text="Don't need to fill this, because this field will be automatically generate", max_length=255, null=True, unique=True)),
                ('shortDescription', models.CharField(max_length=500, verbose_name='Short Description')),
                ('content', models.TextField(help_text='Max charecter 800 ', verbose_name='News content')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Picture  ( 16:9 ratio is recommended)')),
                ('created', models.DateField(auto_now_add=True, db_index=True)),
                ('updated', models.DateField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
            bases=(models.Model, hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name': 'Newsletter',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text="Don't need to fill this, because this field will be automatically generate", max_length=225, null=True, unique=True)),
                ('readable_name', models.CharField(max_length=100, verbose_name='Readable Name')),
                ('semester_year', models.IntegerField(help_text='for example, 2022 or 2018 or 2019 .. etc.', validators=[core.models.check_semester_year], verbose_name='year')),
                ('priority', models.IntegerField(blank=True, default=1, help_text='Lower the value higher the priority is')),
                ('prioritys_combain', models.IntegerField(blank=True, help_text='Lower the value higher the priority is', unique=True)),
            ],
            options={
                'verbose_name': 'Club Year',
                'ordering': ['-prioritys_combain'],
            },
        ),
        migrations.CreateModel(
            name='TermsAndCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Terms & Condition', max_length=100)),
                ('content', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WhatWedid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_link', models.URLField(blank=True, null=True, verbose_name='Youtube video link')),
                ('title', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'What We Did',
            },
        ),
        migrations.CreateModel(
            name='WhyJoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(help_text='Max charecter is 500', max_length=500)),
            ],
            options={
                'verbose_name': 'Why Join Us!',
                'verbose_name_plural': 'Why Join Us!',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(height_field='height', upload_to=core.models.ImageUploderPath.uploadTo_withBasefile, verbose_name='Image', width_field='width')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.clubevent')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=500)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField(max_length=1000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('replay', models.ManyToManyField(to='core.Comments')),
            ],
            options={
                'verbose_name': 'Comment',
            },
        ),
        migrations.AddField(
            model_name='clubevent',
            name='comments',
            field=models.ManyToManyField(to='core.Comments'),
        ),
        migrations.AddField(
            model_name='clubevent',
            name='semester',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clubevents', to='core.semester', verbose_name='Club year'),
        ),
        migrations.CreateModel(
            name='BlogAndArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('article_type', models.CharField(choices=[['a', 'article'], ['p', 'publication']], max_length=1)),
                ('slug', models.SlugField(blank=True, help_text="Don't need to fill this, because this field will be automatically generate", max_length=255, null=True, unique=True)),
                ('shortDescription', models.CharField(max_length=500, verbose_name='Short Description')),
                ('content', models.TextField(verbose_name='Article content')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=core.models.ImageUploderPath.uploadTo, verbose_name='Picture (2.35:1 ratio is recommended)')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
                ('comments', models.ManyToManyField(to='core.Comments')),
            ],
            options={
                'verbose_name': 'Article And Publication',
            },
        ),
    ]
